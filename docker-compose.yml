version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - netsentenial_network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - netsentenial_network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:29092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    environment:
      - DATABASE_URL=mysql://netsentenialuser:netsentenialpassword@mysql/netsentenial
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Add other necessary environment variables here
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - netsentenial_network
    volumes:
      - /Users/bkpandey/.kube/config:/root/.kube/config
      - ./config.yaml:/app/config.yaml
      - ./models:/app/models
      - ./data:/app/data
    command: ["sh", "-c", "/wait-for-it.sh kafka:29092 -- python app/run.py"]

  create_mock_data:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Add other necessary environment variables here
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - netsentenial_network
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./models:/app/models
      - ./data:/app/data
    command: ["sh", "-c", "/wait-for-it.sh kafka:29092 -- python scripts/create_mock_data.py"]

  process_mock_data:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Add other necessary environment variables here
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - netsentenial_network
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./models:/app/models
      - ./data:/app/data
    command: ["sh", "-c", "/wait-for-it.sh kafka:29092 -- python scripts/process_mock_data.py"]

  prediction_service:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=mysql://netsentenialuser:netsentenialpassword@mysql/netsentenial
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      # Add other necessary environment variables here
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - netsentenial_network
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./models:/app/models
      - ./data:/app/data
    command: ["sh", "-c", "/wait-for-it.sh kafka:29092 -- python scripts/prediction_service.py"]

networks:
  netsentenial_network:
    driver: bridge
